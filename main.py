import re

import telebot
from telebot import types

import config
from api_stubs import proccess_pdf, proccess_question
from utils import send_default_message, get_default_markup, return_to_menu_markup

bot = telebot.TeleBot(config.BOT_TOKEN)


@bot.message_handler(content_types=['document'])
def handle_docs(message):
    try:
        if re.match(r"^.*\.pdf$", message.document.file_name):
            bot.send_message(message.chat.id,
                             '–°—É–ø–µ—Ä, —Å–æ—Ö—Ä–∞–Ω—è—é‚ò∫Ô∏è')

            # —Ç—É—Ç –ø–æ—Å—Ç-–∑–∞–ø—Ä–æ—Å
            # src = 'C:/Python/Project/tg_bot/files/received/' + ;
            # with open(src, 'wb') as new_file:
            #     new_file.write(downloaded_file)
            is_file_proccessed_successfully = proccess_pdf()

            if is_file_proccessed_successfully:
                bot.reply_to(message, '–í—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ‚ò∫Ô∏è')
                send_default_message(message, bot)
            else:
                bot.reply_to(message, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫üò∞')
        else:
            bot.send_message(message.chat.id,
                             '–¢—ã –º–Ω–µ –ø—Ä–∏—Å–ª–∞–ª –Ω–µ pdf-–¥–æ–∫—É–º–µ–Ω—Çü§î–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                                    reply_markup=return_to_menu_markup())
    except Exception as e:
        bot.reply_to(message, e)
        send_default_message(message, bot)



@bot.message_handler(commands=['start'])
def button_message(message):
    bot.send_message(message.chat.id,
                     f'–ü—Ä–∏–≤–µ—Ç! ‚ò∫Ô∏è \n–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º —Ä–∂–¥. {config.WHAT_DO_YOU_WANT_STR}',
                     reply_markup=get_default_markup())


@bot.message_handler(content_types='text')
def message_reply(message):
    if message.text == "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        #markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        question = message.text
        response = proccess_question()
        bot.send_message(message.chat.id, response)
        bot.send_message(message.chat.id, f'{config.WHAT_DO_YOU_WANT_STR}', reply_markup=get_default_markup())
    elif message.text == "–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π":
        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–æ–∫—É–º–µ–Ω—Ç —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º pdf üëá')
    elif message.text == "–•–æ—á—É –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éü•∫":
        bot.send_message(message.chat.id, f'{config.WHAT_DO_YOU_WANT_STR}', reply_markup=get_default_markup())


bot.infinity_polling()
